!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).Lit=e()}(this,function(){"use strict";function t(){}"undefined"!=typeof window&&(window.Lit=t);const e=Array.isArray;var o=t=>"[object Object]"===Object.prototype.toString.call(t),n=(t,e)=>{const o=Reflect.ownKeys(t);for(let n of o)e(n,t[n])},l=t=>"function"==typeof t,c=t=>null!==t,r=t=>null!==t&&"object"==typeof t,f=/\B([A-Z])/g,s=t=>"symbol"==typeof t;function u(t,e){const n={};return function(t,e,o){o.isSymbol=s(t),o.attr=e&&e.attr||(o.isSymbol?null:t.replace(f,"-$1").toLowerCase())}(t,e,n),e&&(l(e)?n.from=e:(function(t,e){const n=t.type;null!=n&&(l(n)?e.from=n:o(n)&&(l(n.from)&&(e.from=n.from),l(n.to)&&(e.to=n.to)))}(e,n),function(t,e){if("default"in t){const o=t.default;!l(o)&&r(o)||(e.default=o)}}(e,n))),n.from===Boolean&&(n.from=c),n}function a(t){const l={};return function(t,l){const c=l.props={},r=t.props;let f=!1;if(null!=r&&((f=e(r))||o(r)))if(f){if(!r.length)return;for(let t of r)c[t]=u(t,null)}else n(r,(t,e)=>{c[t]=u(t,e)})}(t,l),l}const i=Object.create;var d=t=>t,p=t=>{return 36===(t+"").charCodeAt(0)};const b=Object.defineProperty;function m(t,e){const o=i(null),c=new Proxy(o,{set:(t,e,o)=>!p(e)&&(t[e]=o,!0)});return o.$el=t.attachShadow({mode:"open"}),o.$root=t,function(t,e,o,c){const r=e.props,f=i(null),s=o.$props=new Proxy(f,{set:(t,e,o)=>e in t&&(t[e]=o,!0)});n(r,(e,o)=>{let n=null;o.attr&&(n=t.getAttribute(o.attr)),f[e]=null!==n?(o.from||d)(n):l(o.default)?o.default.call(c):o.default}),n(r,(t,e)=>{!e.isSymbol&&p(t)||b(o,t,{enumerable:!0,configurable:!0,get:()=>s[t],set:e=>s[t]=e})})}(t,e,o,c),c}return t.define=function(t,e){e=a(e),customElements.define(t,class extends HTMLElement{constructor(){super(),this.$lit=m(this,e)}static get observedAttributes(){const t=[];return n(e.props,(e,o)=>{o.attr&&t.push(o.attr)}),t}attributeChangedCallback(t,e,o){console.log(t,e,o)}connectedCallback(){console.log("connectedCallback")}disconnectedCallback(){console.log("disconnectedCallback")}adoptedCallback(){console.log("adoptedCallback")}})},t});
